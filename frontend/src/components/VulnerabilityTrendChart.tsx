import React from 'react';
import { useQuery } from 'react-query';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';
import { 
  Card, 
  CardContent, 
  Typography, 
  Box, 
  CircularProgress, 
  Alert,
  Fade,
  Grow,
  useTheme,
  Paper,
} from '@mui/material';
import { TrendingUpOutlined } from '@mui/icons-material';
import { businessApplicationsApi } from '../services/api';
import { useAuth } from '../contexts/AuthContext';

const VulnerabilityTrendChart: React.FC = () => {
  const { organization } = useAuth();
  const theme = useTheme();

  const { data: trendData, isLoading, error } = useQuery(
    ['vulnerabilityTrend', organization],
    () => businessApplicationsApi.getVulnerabilityTrend(organization!),
    {
      enabled: !!organization,
      select: (data) => {
        // Transform the data to fit the chart
        return data.map(item => ({
          date: item.month,
          critical: item.severities.critical || 0,
          high: item.severities.high || 0,
          medium: item.severities.medium || 0,
          low: item.severities.low || 0,
        }));
      }
    }
  );

  if (isLoading) {
    return (
      <Card 
        elevation={8}
        sx={{
          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
          borderRadius: 3,
          overflow: 'hidden',
        }}
      >
        <CardContent>
          <Box 
            display="flex" 
            flexDirection="column" 
            justifyContent="center" 
            alignItems="center" 
            height={300}
          >
            <TrendingUpOutlined 
              sx={{ 
                fontSize: 48, 
                color: 'white', 
                opacity: 0.7, 
                mb: 2,
                animation: 'pulse 2s infinite',
                '@keyframes pulse': {
                  '0%': { opacity: 0.7, transform: 'scale(1)' },
                  '50%': { opacity: 1, transform: 'scale(1.1)' },
                  '100%': { opacity: 0.7, transform: 'scale(1)' },
                },
              }} 
            />
            <Typography variant="h6" sx={{ color: 'white', mb: 2 }}>
              Loading Trend Data
            </Typography>
            <CircularProgress 
              size={40} 
              thickness={4}
              sx={{ 
                color: 'white',
                '& .MuiCircularProgress-circle': {
                  strokeLinecap: 'round',
                },
              }} 
            />
          </Box>
        </CardContent>
      </Card>
    );
  }

  if (error) {
    return (
      <Card 
        elevation={8}
        sx={{
          background: 'linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%)',
          borderRadius: 3,
        }}
      >
        <CardContent>
          <Box 
            display="flex" 
            flexDirection="column" 
            alignItems="center" 
            height={300}
            justifyContent="center"
          >
            <Alert 
              severity="error" 
              sx={{ 
                backgroundColor: 'rgba(255, 255, 255, 0.9)',
                borderRadius: 2,
              }}
            >
              Failed to load trend data.
            </Alert>
          </Box>
        </CardContent>
      </Card>
    );
  }

  // Enhanced Tooltip Component
  const CustomTooltip = ({ active, payload, label }: any) => {
    if (active && payload && payload.length) {
      const total = payload.reduce((sum: number, entry: any) => sum + entry.value, 0);
      return (
        <Paper
          elevation={12}
          sx={{
            background: 'linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%)',
            borderRadius: 3,
            padding: 2,
            minWidth: 200,
            border: '1px solid rgba(0,0,0,0.1)',
          }}
        >
          <Typography variant="subtitle2" fontWeight="bold" gutterBottom sx={{ color: theme.palette.primary.main }}>
            {label}
          </Typography>
          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>
            {payload.map((entry: any) => (
              <Box key={entry.dataKey} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                  <Box 
                    sx={{ 
                      width: 12, 
                      height: 12, 
                      borderRadius: '50%', 
                      backgroundColor: entry.color,
                      boxShadow: `0 0 8px ${entry.color}40`,
                    }} 
                  />
                  <Typography variant="body2" sx={{ textTransform: 'capitalize', fontWeight: 500 }}>
                    {entry.name}:
                  </Typography>
                </Box>
                <Typography variant="body2" fontWeight="bold" sx={{ color: entry.color }}>
                  {entry.value}
                </Typography>
              </Box>
            ))}
          </Box>
          <Box sx={{ mt: 1, pt: 1, borderTop: '1px solid rgba(0,0,0,0.1)' }}>
            <Typography variant="caption" color="text.secondary">
              Total: {total} vulnerabilities
            </Typography>
          </Box>
        </Paper>
      );
    }
    return null;
  };

  return (
    <Fade in={true} timeout={1200}>
      <Card 
        elevation={8}
        sx={{
          background: 'linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%)',
          borderRadius: 3,
          overflow: 'hidden',
          position: 'relative',
          '&::before': {
            content: '""',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            height: 3,
            background: 'linear-gradient(90deg, #8B0000 0%, #FF4444 25%, #FFA500 50%, #90EE90 100%)',
          },
        }}
      >
        <CardContent sx={{ p: 3 }}>
          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
            <TrendingUpOutlined 
              sx={{ 
                fontSize: 32, 
                mr: 2, 
                color: theme.palette.primary.main,
                filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))',
              }} 
            />
            <Typography 
              variant="h6" 
              fontWeight="bold"
              sx={{ 
                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                backgroundClip: 'text',
                WebkitBackgroundClip: 'text',
                WebkitTextFillColor: 'transparent',
              }}
            >
              Vulnerability Trend
            </Typography>
          </Box>
          <Grow in={true} timeout={1600}>
            <Box sx={{ height: 320 }}>
              <ResponsiveContainer width="100%" height="100%">
                <LineChart data={trendData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>
                  <defs>
                    <linearGradient id="criticalGradient" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="0%" stopColor="#8B0000" stopOpacity={0.8}/>
                      <stop offset="100%" stopColor="#8B0000" stopOpacity={0.1}/>
                    </linearGradient>
                    <linearGradient id="highGradient" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="0%" stopColor="#FF4444" stopOpacity={0.8}/>
                      <stop offset="100%" stopColor="#FF4444" stopOpacity={0.1}/>
                    </linearGradient>
                    <linearGradient id="mediumGradient" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="0%" stopColor="#FFA500" stopOpacity={0.8}/>
                      <stop offset="100%" stopColor="#FFA500" stopOpacity={0.1}/>
                    </linearGradient>
                    <linearGradient id="lowGradient" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="0%" stopColor="#90EE90" stopOpacity={0.8}/>
                      <stop offset="100%" stopColor="#90EE90" stopOpacity={0.1}/>
                    </linearGradient>
                  </defs>
                  <CartesianGrid 
                    strokeDasharray="3 3" 
                    stroke="rgba(0,0,0,0.1)"
                    horizontal={true}
                    vertical={false}
                  />
                  <XAxis 
                    dataKey="date" 
                    tick={{ fontSize: 12, fontWeight: 500 }}
                    axisLine={{ stroke: 'rgba(0,0,0,0.2)' }}
                  />
                  <YAxis 
                    tick={{ fontSize: 12 }}
                    axisLine={{ stroke: 'rgba(0,0,0,0.2)' }}
                  />
                  <Tooltip content={<CustomTooltip />} />
                  <Legend 
                    wrapperStyle={{ 
                      paddingTop: '15px',
                      fontSize: '12px',
                      fontWeight: '500',
                    }}
                  />
                  <Line 
                    type="monotone" 
                    dataKey="critical" 
                    stroke="#8B0000" 
                    strokeWidth={3}
                    dot={{ fill: '#8B0000', strokeWidth: 2, r: 4 }}
                    activeDot={{ r: 6, stroke: '#8B0000', strokeWidth: 2 }}
                    name="Critical" 
                  />
                  <Line 
                    type="monotone" 
                    dataKey="high" 
                    stroke="#FF4444" 
                    strokeWidth={3}
                    dot={{ fill: '#FF4444', strokeWidth: 2, r: 4 }}
                    activeDot={{ r: 6, stroke: '#FF4444', strokeWidth: 2 }}
                    name="High" 
                  />
                  <Line 
                    type="monotone" 
                    dataKey="medium" 
                    stroke="#FFA500" 
                    strokeWidth={3}
                    dot={{ fill: '#FFA500', strokeWidth: 2, r: 4 }}
                    activeDot={{ r: 6, stroke: '#FFA500', strokeWidth: 2 }}
                    name="Medium" 
                  />
                  <Line 
                    type="monotone" 
                    dataKey="low" 
                    stroke="#90EE90" 
                    strokeWidth={3}
                    dot={{ fill: '#90EE90', strokeWidth: 2, r: 4 }}
                    activeDot={{ r: 6, stroke: '#90EE90', strokeWidth: 2 }}
                    name="Low" 
                  />
                </LineChart>
              </ResponsiveContainer>
            </Box>
          </Grow>
        </CardContent>
      </Card>
    </Fade>
  );
};

export default VulnerabilityTrendChart;
