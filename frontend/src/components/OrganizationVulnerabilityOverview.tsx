import React from 'react';
import { useQuery } from 'react-query';
import {
  Box,
  Typography,
  Card,
  CardContent,
  Grid,
  CircularProgress,
  Alert,
  Chip,
  Paper,
  useTheme,
  LinearProgress,
  Fade,
  Grow,
  IconButton,
} from '@mui/material';
import {
  PieChart,
  Pie,
  Cell,
  ResponsiveContainer,
  Legend,
  Tooltip,
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  RadialBarChart,
  RadialBar,
  AreaChart,
  Area,
  Treemap,
} from 'recharts';
import {
  SecurityOutlined,
  BugReportOutlined,
  KeyOutlined,
  AccountTreeOutlined,
  TrendingUpOutlined,
  WarningOutlined,
} from '@mui/icons-material';
import { useAuth } from '../contexts/AuthContext';
import { githubApi } from '../services/api';

export interface OrganizationVulnerabilityStats {
  sastVulnerabilities: {
    total: number;
    critical: number;
    high: number;
    medium: number;
    low: number;
  };
  leakedSecrets: {
    total: number;
    critical: number;
    high: number;
    medium: number;
    low: number;
  };
  scaVulnerabilities: {
    total: number;
    critical: number;
    high: number;
    medium: number;
    low: number;
  };
  totalVulnerabilities: number;
  repositoriesScanned: number;
}

const COLORS = {
  sast: '#FF6B6B',
  leakedSecrets: '#4ECDC4',
  sca: '#45B7D1',
};

const MODERN_COLORS = {
  sast: {
    primary: '#FF6B6B',
    gradient: 'linear-gradient(135deg, #FF6B6B 0%, #FF8E8E 100%)',
    shadow: 'rgba(255, 107, 107, 0.3)',
  },
  leakedSecrets: {
    primary: '#4ECDC4',
    gradient: 'linear-gradient(135deg, #4ECDC4 0%, #6FE5DB 100%)',
    shadow: 'rgba(78, 205, 196, 0.3)',
  },
  sca: {
    primary: '#45B7D1',
    gradient: 'linear-gradient(135deg, #45B7D1 0%, #67C3D9 100%)',
    shadow: 'rgba(69, 183, 209, 0.3)',
  },
};

const SEVERITY_COLORS = {
  critical: {
    primary: '#8B0000',
    gradient: 'linear-gradient(135deg, #8B0000 0%, #B22222 100%)',
    shadow: 'rgba(139, 0, 0, 0.4)',
  },
  high: {
    primary: '#FF4444',
    gradient: 'linear-gradient(135deg, #FF4444 0%, #FF6666 100%)',
    shadow: 'rgba(255, 68, 68, 0.4)',
  },
  medium: {
    primary: '#FFA500',
    gradient: 'linear-gradient(135deg, #FFA500 0%, #FFB733 100%)',
    shadow: 'rgba(255, 165, 0, 0.4)',
  },
  low: {
    primary: '#90EE90',
    gradient: 'linear-gradient(135deg, #90EE90 0%, #A8F3A8 100%)',
    shadow: 'rgba(144, 238, 144, 0.4)',
  },
};

const OrganizationVulnerabilityOverview: React.FC = () => {
  const { organization } = useAuth();
  const theme = useTheme();

  console.log('OrganizationVulnerabilityOverview - organization:', organization);

  const { 
    data: vulnerabilityStats, 
    isLoading, 
    error 
  } = useQuery<OrganizationVulnerabilityStats, Error>(
    ['organizationVulnerabilities', organization],
    () => {
      console.log('Making API call for organization:', organization);
      return githubApi.getOrganizationVulnerabilityStats(organization!);
    },
    { 
      enabled: !!organization,
    }
  );

  console.log('OrganizationVulnerabilityOverview - data:', vulnerabilityStats, 'loading:', isLoading, 'error:', error);

  if (isLoading) {
    return (
      <Card 
        elevation={8}
        sx={{
          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
          borderRadius: 3,
          overflow: 'hidden',
        }}
      >
        <CardContent>
          <Box 
            display="flex" 
            flexDirection="column" 
            justifyContent="center" 
            alignItems="center" 
            minHeight="400px"
            sx={{ position: 'relative' }}
          >
            <SecurityOutlined 
              sx={{ 
                fontSize: 64, 
                color: 'white', 
                opacity: 0.7, 
                mb: 2,
                animation: 'pulse 2s infinite',
                '@keyframes pulse': {
                  '0%': { opacity: 0.7, transform: 'scale(1)' },
                  '50%': { opacity: 1, transform: 'scale(1.1)' },
                  '100%': { opacity: 0.7, transform: 'scale(1)' },
                },
              }} 
            />
            <Typography variant="h6" sx={{ color: 'white', mb: 2 }}>
              Loading Organization Security Overview
            </Typography>
            <CircularProgress 
              size={60} 
              thickness={4}
              sx={{ 
                color: 'white',
                '& .MuiCircularProgress-circle': {
                  strokeLinecap: 'round',
                },
              }} 
            />
            <Box sx={{ width: '60%', mt: 3 }}>
              <LinearProgress 
                sx={{ 
                  height: 8,
                  borderRadius: 4,
                  backgroundColor: 'rgba(255, 255, 255, 0.2)',
                  '& .MuiLinearProgress-bar': {
                    backgroundColor: 'white',
                    borderRadius: 4,
                  },
                }} 
              />
            </Box>
            <Typography variant="body2" sx={{ color: 'rgba(255, 255, 255, 0.8)', mt: 2 }}>
              Analyzing {organization} repositories...
            </Typography>
          </Box>
        </CardContent>
      </Card>
    );
  }

  if (error) {
    return (
      <Card 
        elevation={8}
        sx={{
          background: 'linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%)',
          borderRadius: 3,
        }}
      >
        <CardContent>
          <Box 
            display="flex" 
            flexDirection="column" 
            alignItems="center" 
            p={3}
          >
            <WarningOutlined 
              sx={{ 
                fontSize: 64, 
                color: 'white', 
                mb: 2,
                filter: 'drop-shadow(0 4px 8px rgba(0,0,0,0.3))',
              }} 
            />
            <Typography variant="h6" sx={{ color: 'white', mb: 2, textAlign: 'center' }}>
              Security Data Unavailable
            </Typography>
            <Alert 
              severity="error" 
              sx={{ 
                backgroundColor: 'rgba(255, 255, 255, 0.9)',
                borderRadius: 2,
                '& .MuiAlert-icon': {
                  color: '#d32f2f',
                },
              }}
            >
              Failed to load organization vulnerability data: {error.message}
            </Alert>
          </Box>
        </CardContent>
      </Card>
    );
  }

  if (!vulnerabilityStats) {
    return (
      <Card 
        elevation={8}
        sx={{
          background: 'linear-gradient(135deg, #74b9ff 0%, #0984e3 100%)',
          borderRadius: 3,
        }}
      >
        <CardContent>
          <Box 
            display="flex" 
            flexDirection="column" 
            alignItems="center" 
            p={4}
          >
            <SecurityOutlined 
              sx={{ 
                fontSize: 80, 
                color: 'white', 
                mb: 3,
                opacity: 0.9,
                filter: 'drop-shadow(0 4px 8px rgba(0,0,0,0.2))',
              }} 
            />
            <Typography variant="h5" sx={{ color: 'white', mb: 2, textAlign: 'center', fontWeight: 'bold' }}>
              No Security Data Available
            </Typography>
            <Typography variant="body1" sx={{ color: 'rgba(255,255,255,0.9)', mb: 3, textAlign: 'center' }}>
              We couldn't find any security data for organization: <strong>{organization}</strong>
            </Typography>
            <Alert 
              severity="info" 
              sx={{ 
                backgroundColor: 'rgba(255, 255, 255, 0.95)',
                borderRadius: 2,
                boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
              }}
            >
              This could mean the organization has no repositories with security scanning enabled, or the data is still being processed.
            </Alert>
          </Box>
        </CardContent>
      </Card>
    );
  }

  const pieData = [
    {
      name: 'SAST',
      value: vulnerabilityStats.sastVulnerabilities.total,
      color: COLORS.sast,
    },
    {
      name: 'Leaked Secrets',
      value: vulnerabilityStats.leakedSecrets.total,
      color: COLORS.leakedSecrets,
    },
    {
      name: 'SCA',
      value: vulnerabilityStats.scaVulnerabilities.total,
      color: COLORS.sca,
    },
  ].filter(item => item.value > 0);

  const barData = [
    {
      name: 'SAST',
      critical: vulnerabilityStats.sastVulnerabilities.critical,
      high: vulnerabilityStats.sastVulnerabilities.high,
      medium: vulnerabilityStats.sastVulnerabilities.medium,
      low: vulnerabilityStats.sastVulnerabilities.low,
    },
    {
      name: 'Leaked Secrets',
      critical: vulnerabilityStats.leakedSecrets.critical,
      high: vulnerabilityStats.leakedSecrets.high,
      medium: vulnerabilityStats.leakedSecrets.medium,
      low: vulnerabilityStats.leakedSecrets.low,
    },
    {
      name: 'SCA',
      critical: vulnerabilityStats.scaVulnerabilities.critical,
      high: vulnerabilityStats.scaVulnerabilities.high,
      medium: vulnerabilityStats.scaVulnerabilities.medium,
      low: vulnerabilityStats.scaVulnerabilities.low,
    },
  ];

  const CustomPieTooltip = ({ active, payload }: any) => {
    if (active && payload && payload.length) {
      const data = payload[0];
      return (
        <Paper
          elevation={8}
          sx={{
            background: 'linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%)',
            borderRadius: 2,
            padding: 2,
            border: '2px solid',
            borderColor: data.payload.color,
            transform: 'translateY(-10px)',
            transition: 'all 0.3s ease',
          }}
        >
          <Typography variant="subtitle2" fontWeight="bold" color={data.payload.color}>
            {`${data.name}: ${data.value} vulnerabilities`}
          </Typography>
          <Typography variant="caption" color="text.secondary">
            {`${((data.value / (pieData.reduce((acc, item) => acc + item.value, 0))) * 100).toFixed(1)}% of total`}
          </Typography>
        </Paper>
      );
    }
    return null;
  };

  const CustomTooltip = ({ active, payload, label }: any) => {
    if (active && payload && payload.length) {
      return (
        <Box
          sx={{
            backgroundColor: 'white',
            border: '1px solid #ccc',
            borderRadius: 1,
            padding: 1,
            boxShadow: 2,
          }}
        >
          <Typography variant="subtitle2">{`${label}: ${payload[0].value} vulnerabilities`}</Typography>
        </Box>
      );
    }
    return null;
  };

  const CustomBarTooltip = ({ active, payload, label }: any) => {
    if (active && payload && payload.length) {
      const total = payload.reduce((sum: number, entry: any) => sum + entry.value, 0);
      return (
        <Paper
          elevation={12}
          sx={{
            background: 'linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%)',
            borderRadius: 3,
            padding: 2,
            minWidth: 200,
            border: '1px solid rgba(0,0,0,0.1)',
          }}
        >
          <Typography variant="subtitle2" fontWeight="bold" gutterBottom sx={{ color: theme.palette.primary.main }}>
            {label} Vulnerabilities
          </Typography>
          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>
            {payload.map((entry: any) => (
              <Box key={entry.dataKey} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                  <Box 
                    sx={{ 
                      width: 12, 
                      height: 12, 
                      borderRadius: '50%', 
                      backgroundColor: entry.color,
                      boxShadow: `0 0 8px ${entry.color}40`,
                    }} 
                  />
                  <Typography variant="body2" sx={{ textTransform: 'capitalize', fontWeight: 500 }}>
                    {entry.dataKey}:
                  </Typography>
                </Box>
                <Typography variant="body2" fontWeight="bold" sx={{ color: entry.color }}>
                  {entry.value} ({entry.value > 0 ? ((entry.value / total) * 100).toFixed(1) : 0}%)
                </Typography>
              </Box>
            ))}
          </Box>
          <Box sx={{ mt: 1, pt: 1, borderTop: '1px solid rgba(0,0,0,0.1)' }}>
            <Typography variant="caption" color="text.secondary">
              Total: {total} vulnerabilities
            </Typography>
          </Box>
        </Paper>
      );
    }
    return null;
  };

  return (
    <Fade in={true} timeout={800}>
      <Card 
        elevation={12}
        sx={{
          background: 'linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%)',
          borderRadius: 4,
          overflow: 'hidden',
          position: 'relative',
          '&::before': {
            content: '""',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            height: 4,
            background: 'linear-gradient(90deg, #667eea 0%, #764ba2 50%, #f093fb 100%)',
          },
        }}
      >
        <CardContent sx={{ p: 4 }}>
          <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>
            <SecurityOutlined 
              sx={{ 
                fontSize: 40, 
                mr: 2, 
                color: theme.palette.primary.main,
                filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))',
              }} 
            />
            <Box>
              <Typography 
                variant="h4" 
                fontWeight="bold" 
                sx={{ 
                  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                  backgroundClip: 'text',
                  WebkitBackgroundClip: 'text',
                  WebkitTextFillColor: 'transparent',
                  mb: 0.5,
                }}
              >
                Organization-Wide Security Overview
              </Typography>
              <Typography variant="body1" color="text.secondary" sx={{ fontWeight: 500 }}>
                Comprehensive vulnerability analysis across {vulnerabilityStats.repositoriesScanned} repositories in <strong>{organization}</strong>
              </Typography>
              <Typography variant="caption" color="text.secondary" sx={{ fontStyle: 'italic', opacity: 0.8 }}>
                Real-time data from all organizational repositories
              </Typography>
            </Box>
          </Box>

          <Grid container spacing={4} sx={{ mt: 1 }}>
            {/* Enhanced Summary Cards */}
            <Grid item xs={12} md={3}>
              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>
                <Grow in={true} timeout={1000}>
                  <Paper
                    elevation={8}
                    sx={{
                      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                      borderRadius: 3,
                      overflow: 'hidden',
                      position: 'relative',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: 0,
                        left: 0,
                        right: 0,
                        bottom: 0,
                        background: 'rgba(255,255,255,0.1)',
                        backdropFilter: 'blur(10px)',
                      },
                    }}
                  >
                    <CardContent sx={{ textAlign: 'center', py: 3, position: 'relative', zIndex: 1 }}>
                      <TrendingUpOutlined sx={{ fontSize: 40, color: 'white', mb: 1, opacity: 0.9 }} />
                      <Typography variant="h3" fontWeight="bold" sx={{ color: 'white', mb: 1 }}>
                        {vulnerabilityStats.totalVulnerabilities.toLocaleString()}
                      </Typography>
                      <Typography variant="h6" sx={{ color: 'rgba(255,255,255,0.9)', fontWeight: 500 }}>
                        Total Vulnerabilities
                      </Typography>
                      <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.7)' }}>
                        Across all security tools
                      </Typography>
                    </CardContent>
                  </Paper>
                </Grow>

                <Grow in={true} timeout={1200}>
                  <Paper
                    elevation={6}
                    sx={{
                      background: MODERN_COLORS.sast.gradient,
                      borderRadius: 3,
                      position: 'relative',
                      overflow: 'hidden',
                      '&:hover': {
                        transform: 'translateY(-4px)',
                        transition: 'all 0.3s ease',
                        boxShadow: `0 8px 25px ${MODERN_COLORS.sast.shadow}`,
                      },
                    }}
                  >
                    <CardContent sx={{ py: 3 }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                        <BugReportOutlined sx={{ fontSize: 32, color: 'white', mr: 2 }} />
                        <Typography variant="h6" fontWeight="bold" sx={{ color: 'white' }}>
                          SAST (Code Scanning)
                        </Typography>
                      </Box>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                        <Typography variant="h4" fontWeight="bold" sx={{ color: 'white' }}>
                          {vulnerabilityStats.sastVulnerabilities.total.toLocaleString()}
                        </Typography>
                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>
                          {vulnerabilityStats.sastVulnerabilities.critical > 0 && (
                            <Chip 
                              label={`Critical: ${vulnerabilityStats.sastVulnerabilities.critical}`} 
                              size="small" 
                              sx={{ 
                                bgcolor: 'rgba(139, 0, 0, 0.9)', 
                                color: 'white', 
                                fontSize: '0.7rem',
                                fontWeight: 'bold',
                                boxShadow: '0 2px 8px rgba(139, 0, 0, 0.3)',
                              }}
                            />
                          )}
                          {vulnerabilityStats.sastVulnerabilities.high > 0 && (
                            <Chip 
                              label={`High: ${vulnerabilityStats.sastVulnerabilities.high}`} 
                              size="small" 
                              sx={{ 
                                bgcolor: 'rgba(255, 68, 68, 0.9)', 
                                color: 'white', 
                                fontSize: '0.7rem',
                                fontWeight: 'bold',
                                boxShadow: '0 2px 8px rgba(255, 68, 68, 0.3)',
                              }}
                            />
                          )}
                        </Box>
                      </Box>
                    </CardContent>
                  </Paper>
                </Grow>

                <Grow in={true} timeout={1400}>
                  <Paper
                    elevation={6}
                    sx={{
                      background: MODERN_COLORS.leakedSecrets.gradient,
                      borderRadius: 3,
                      position: 'relative',
                      overflow: 'hidden',
                      '&:hover': {
                        transform: 'translateY(-4px)',
                        transition: 'all 0.3s ease',
                        boxShadow: `0 8px 25px ${MODERN_COLORS.leakedSecrets.shadow}`,
                      },
                    }}
                  >
                    <CardContent sx={{ py: 3 }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                        <KeyOutlined sx={{ fontSize: 32, color: 'white', mr: 2 }} />
                        <Typography variant="h6" fontWeight="bold" sx={{ color: 'white' }}>
                          Leaked Secrets
                        </Typography>
                      </Box>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                        <Typography variant="h4" fontWeight="bold" sx={{ color: 'white' }}>
                          {vulnerabilityStats.leakedSecrets.total.toLocaleString()}
                        </Typography>
                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>
                          {vulnerabilityStats.leakedSecrets.critical > 0 && (
                            <Chip 
                              label={`Critical: ${vulnerabilityStats.leakedSecrets.critical}`} 
                              size="small" 
                              sx={{ 
                                bgcolor: 'rgba(139, 0, 0, 0.9)', 
                                color: 'white', 
                                fontSize: '0.7rem',
                                fontWeight: 'bold',
                                boxShadow: '0 2px 8px rgba(139, 0, 0, 0.3)',
                              }}
                            />
                          )}
                          {vulnerabilityStats.leakedSecrets.high > 0 && (
                            <Chip 
                              label={`High: ${vulnerabilityStats.leakedSecrets.high}`} 
                              size="small" 
                              sx={{ 
                                bgcolor: 'rgba(255, 68, 68, 0.9)', 
                                color: 'white', 
                                fontSize: '0.7rem',
                                fontWeight: 'bold',
                                boxShadow: '0 2px 8px rgba(255, 68, 68, 0.3)',
                              }}
                            />
                          )}
                        </Box>
                      </Box>
                    </CardContent>
                  </Paper>
                </Grow>

                <Grow in={true} timeout={1600}>
                  <Paper
                    elevation={6}
                    sx={{
                      background: MODERN_COLORS.sca.gradient,
                      borderRadius: 3,
                      position: 'relative',
                      overflow: 'hidden',
                      '&:hover': {
                        transform: 'translateY(-4px)',
                        transition: 'all 0.3s ease',
                        boxShadow: `0 8px 25px ${MODERN_COLORS.sca.shadow}`,
                      },
                    }}
                  >
                    <CardContent sx={{ py: 3 }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                        <AccountTreeOutlined sx={{ fontSize: 32, color: 'white', mr: 2 }} />
                        <Typography variant="h6" fontWeight="bold" sx={{ color: 'white' }}>
                          SCA (Dependabot)
                        </Typography>
                      </Box>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                        <Typography variant="h4" fontWeight="bold" sx={{ color: 'white' }}>
                          {vulnerabilityStats.scaVulnerabilities.total.toLocaleString()}
                        </Typography>
                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>
                          {vulnerabilityStats.scaVulnerabilities.critical > 0 && (
                            <Chip 
                              label={`Critical: ${vulnerabilityStats.scaVulnerabilities.critical}`} 
                              size="small" 
                              sx={{ 
                                bgcolor: 'rgba(139, 0, 0, 0.9)', 
                                color: 'white', 
                                fontSize: '0.7rem',
                                fontWeight: 'bold',
                                boxShadow: '0 2px 8px rgba(139, 0, 0, 0.3)',
                              }}
                            />
                          )}
                          {vulnerabilityStats.scaVulnerabilities.high > 0 && (
                            <Chip 
                              label={`High: ${vulnerabilityStats.scaVulnerabilities.high}`} 
                              size="small" 
                              sx={{ 
                                bgcolor: 'rgba(255, 68, 68, 0.9)', 
                                color: 'white', 
                                fontSize: '0.7rem',
                                fontWeight: 'bold',
                                boxShadow: '0 2px 8px rgba(255, 68, 68, 0.3)',
                              }}
                            />
                          )}
                        </Box>
                      </Box>
                    </CardContent>
                  </Paper>
                </Grow>
              </Box>
            </Grid>

            {/* Enhanced Pie Chart */}
            <Grid item xs={12} md={4}>
              <Grow in={true} timeout={1800}>
                <Paper
                  elevation={8}
                  sx={{
                    borderRadius: 3,
                    overflow: 'hidden',
                    background: 'linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%)',
                    position: 'relative',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      height: 3,
                      background: 'linear-gradient(90deg, #FF6B6B 0%, #4ECDC4 50%, #45B7D1 100%)',
                    },
                  }}
                >
                  <CardContent sx={{ p: 3 }}>
                    <Typography 
                      variant="h6" 
                      fontWeight="bold" 
                      textAlign="center" 
                      sx={{ 
                        mb: 2,
                        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                        backgroundClip: 'text',
                        WebkitBackgroundClip: 'text',
                        WebkitTextFillColor: 'transparent',
                      }}
                    >
                      Vulnerability Distribution
                    </Typography>
                    <ResponsiveContainer width="100%" height={320}>
                      <PieChart>
                        <defs>
                          <filter id="shadow" x="-50%" y="-50%" width="200%" height="200%">
                            <feDropShadow dx="2" dy="4" stdDeviation="3" floodOpacity="0.3"/>
                          </filter>
                        </defs>
                        <Pie
                          data={pieData}
                          cx="50%"
                          cy="50%"
                          innerRadius={70}
                          outerRadius={120}
                          paddingAngle={8}
                          dataKey="value"
                          filter="url(#shadow)"
                          animationBegin={500}
                          animationDuration={1500}
                        >
                          {pieData.map((entry, index) => (
                            <Cell 
                              key={`cell-${index}`} 
                              fill={entry.color}
                              stroke="#ffffff"
                              strokeWidth={3}
                            />
                          ))}
                        </Pie>
                        <Tooltip content={<CustomPieTooltip />} />
                        <Legend 
                          wrapperStyle={{ 
                            paddingTop: '20px',
                            fontSize: '14px',
                            fontWeight: '500',
                          }}
                        />
                      </PieChart>
                    </ResponsiveContainer>
                    {pieData.length === 0 && (
                      <Box 
                        sx={{ 
                          display: 'flex', 
                          flexDirection: 'column', 
                          alignItems: 'center', 
                          justifyContent: 'center',
                          height: 320,
                          color: 'text.secondary',
                        }}
                      >
                        <SecurityOutlined sx={{ fontSize: 64, mb: 2, opacity: 0.5 }} />
                        <Typography variant="h6" sx={{ opacity: 0.7 }}>
                          No vulnerabilities detected
                        </Typography>
                        <Typography variant="body2" sx={{ opacity: 0.5 }}>
                          Your organization is secure! 🎉
                        </Typography>
                      </Box>
                    )}
                  </CardContent>
                </Paper>
              </Grow>
            </Grid>

            {/* Enhanced Bar Chart */}
            <Grid item xs={12} md={5}>
              <Grow in={true} timeout={2000}>
                <Paper
                  elevation={8}
                  sx={{
                    borderRadius: 3,
                    overflow: 'hidden',
                    background: 'linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%)',
                    position: 'relative',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      height: 3,
                      background: 'linear-gradient(90deg, #8B0000 0%, #FF4444 25%, #FFA500 50%, #90EE90 100%)',
                    },
                  }}
                >
                  <CardContent sx={{ p: 3 }}>
                    <Typography 
                      variant="h6" 
                      fontWeight="bold" 
                      textAlign="center" 
                      sx={{ 
                        mb: 2,
                        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                        backgroundClip: 'text',
                        WebkitBackgroundClip: 'text',
                        WebkitTextFillColor: 'transparent',
                      }}
                    >
                      Vulnerability Severity Breakdown
                    </Typography>
                    <ResponsiveContainer width="100%" height={320}>
                      <BarChart 
                        data={barData} 
                        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}
                      >
                        <defs>
                          <linearGradient id="criticalGradient" x1="0" y1="0" x2="0" y2="1">
                            <stop offset="0%" stopColor={SEVERITY_COLORS.critical.primary} stopOpacity={1}/>
                            <stop offset="100%" stopColor={SEVERITY_COLORS.critical.primary} stopOpacity={0.8}/>
                          </linearGradient>
                          <linearGradient id="highGradient" x1="0" y1="0" x2="0" y2="1">
                            <stop offset="0%" stopColor={SEVERITY_COLORS.high.primary} stopOpacity={1}/>
                            <stop offset="100%" stopColor={SEVERITY_COLORS.high.primary} stopOpacity={0.8}/>
                          </linearGradient>
                          <linearGradient id="mediumGradient" x1="0" y1="0" x2="0" y2="1">
                            <stop offset="0%" stopColor={SEVERITY_COLORS.medium.primary} stopOpacity={1}/>
                            <stop offset="100%" stopColor={SEVERITY_COLORS.medium.primary} stopOpacity={0.8}/>
                          </linearGradient>
                          <linearGradient id="lowGradient" x1="0" y1="0" x2="0" y2="1">
                            <stop offset="0%" stopColor={SEVERITY_COLORS.low.primary} stopOpacity={1}/>
                            <stop offset="100%" stopColor={SEVERITY_COLORS.low.primary} stopOpacity={0.8}/>
                          </linearGradient>
                        </defs>
                        <CartesianGrid 
                          strokeDasharray="3 3" 
                          stroke="rgba(0,0,0,0.1)"
                          horizontal={true}
                          vertical={false}
                        />
                        <XAxis 
                          dataKey="name" 
                          tick={{ fontSize: 12, fontWeight: 500 }}
                          axisLine={{ stroke: 'rgba(0,0,0,0.2)' }}
                        />
                        <YAxis 
                          tick={{ fontSize: 12 }}
                          axisLine={{ stroke: 'rgba(0,0,0,0.2)' }}
                        />
                        <Tooltip content={<CustomBarTooltip />} />
                        <Legend 
                          wrapperStyle={{ 
                            paddingTop: '15px',
                            fontSize: '12px',
                            fontWeight: '500',
                          }}
                        />
                        <Bar 
                          dataKey="critical" 
                          stackId="a" 
                          fill="url(#criticalGradient)"
                          radius={[0, 0, 0, 0]}
                          animationDuration={1000}
                          animationBegin={800}
                        />
                        <Bar 
                          dataKey="high" 
                          stackId="a" 
                          fill="url(#highGradient)"
                          radius={[0, 0, 0, 0]}
                          animationDuration={1000}
                          animationBegin={1000}
                        />
                        <Bar 
                          dataKey="medium" 
                          stackId="a" 
                          fill="url(#mediumGradient)"
                          radius={[0, 0, 0, 0]}
                          animationDuration={1000}
                          animationBegin={1200}
                        />
                        <Bar 
                          dataKey="low" 
                          stackId="a" 
                          fill="url(#lowGradient)"
                          radius={[4, 4, 0, 0]}
                          animationDuration={1000}
                          animationBegin={1400}
                        />
                      </BarChart>
                    </ResponsiveContainer>
                  </CardContent>
                </Paper>
              </Grow>
            </Grid>
          </Grid>
      </CardContent>
    </Card>
    </Fade>
  );
};

export default OrganizationVulnerabilityOverview;
